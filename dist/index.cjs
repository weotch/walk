"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const C=i=>Array.isArray(i),f=i=>C(i)?i:[i];function M(i,t){const e=i.executionOrder||0,l=t.executionOrder||0;return e-l}class B{constructor(){this.seenObjects=new Set}objectHasBeenSeen(t){return this.seenObjects.has(t.val)}registerObjectVisit(t){this.seenObjects.add(t.val)}}function P(i){var t;return{callbacksByPosition:{preVisit:[],postVisit:[]},config:{trackExecutedCallbacks:!0,visitationRegister:i.visitationRegister||new B,traversalMode:i.traversalMode??"depth",graphMode:i.graphMode??"finiteTree",parallelizeAsyncCallbacks:i.parallelizeAsyncCallbacks??!1,onVisit:((t=f(i.onVisit??[]))==null?void 0:t.filter(e=>!!e.callback).map(e=>({callback:e.callback,executionOrder:e.executionOrder??0,filters:typeof e.filters>"u"?[]:f(e.filters),timing:e.timing??"preVisit"})))??[]}}}function v(i){const t=P(i);f(t.config.onVisit).forEach(e=>{e.timing==="both"?(t.callbacksByPosition.preVisit.push(e),t.callbacksByPosition.postVisit.push(e)):t.callbacksByPosition[e.timing].push(e)});for(const e in t.callbacksByPosition)t.callbacksByPosition[e]=t.callbacksByPosition[e].sort(M);return t}const g=i=>Array.isArray(i)?"array":typeof i=="object"?"object":"value";function T(i){return i.isArrayMember?`[${i.key}]`:`["${i.key}"]`}const h=class h{constructor(t,e=!1,l=!1,s="value",a="undefined",o=[],n,r){this.val=t,this.isRoot=e,this.isArrayMember=l,this.nodeType=s,this.rawType=a,this.executedCallbacks=o,this.key=n,this.parent=r,this._children=void 0,this.id=h._idx++}static fromRoot(t){return new h(t,!0,!1,g(t),typeof t,[],void 0,void 0)}static fromObjectKey(t,e){return new h(t.val[e],!1,!1,g(t.val[e]),typeof t.val[e],[],e,t)}static fromArrayIndex(t,e){return new h(t.val[e],!1,!0,g(t.val[e]),typeof t.val[e],[],e,t)}canBeCompared(){return this.nodeType!=="value"&&this.val!==null&&!Object.is(NaN,this.val)}sameAs(t){return!this.canBeCompared()||this.nodeType!==t.nodeType||this.val===null||Object.is(NaN,this.val)?!1:Object.is(this.val,t.val)}getPath(t){return this.isRoot?"":(t=t||T,this.parent.getPath(t)+t(this))}get children(){return typeof this._children>"u"&&(this._children=[...this.getChildren()]),this._children}*getChildren(){if(this.nodeType==="array")for(let t=0;t<this.val.length;t++)yield h.fromArrayIndex(this,t);else if(this.nodeType==="object"){if(this.val===null)return;for(let t of Object.keys(this.val))yield h.fromObjectKey(this,t)}}get siblings(){return[...this.getSiblings()]}*getSiblings(){if(this.parent)for(let t of this.parent.children)this.key!==t.key&&(yield t)}get ancestors(){return[...this.getAncestors()]}*getAncestors(){let t=this.parent;for(;t;)yield t,t=t.parent}get descendants(){return[...this.getDescendants()]}*getDescendants(){for(const t of this.getChildren())yield t,yield*t.getDescendants()}};h._idx=0;let k=h;function F(i,t){return f(i.filters).every(e=>e(t))}function R(i,t,e){for(let l of i)l.callback(t),e&&t.executedCallbacks.push(l)}async function q(i,t,e){for(let l of i)await l.callback(t),e&&t.executedCallbacks.push(l)}const z=async(i,t)=>{await Promise.all(i.map(e=>Promise.resolve(e.callback(t)).then(()=>{t.executedCallbacks.push(e)})))};class d{constructor(t,e){this.ctx=t,this.executor=e,this.lookup={}}static forSync(t){return new d(t,R)}static forAsync(t){return new d(t,t.config.parallelizeAsyncCallbacks?z:q)}_matchCallbacks(t,e){return(this.ctx.callbacksByPosition[e]||[]).map(s=>s).filter(s=>F(s,t))}pushToStack(t,e){const l=t.children[t.children.length-1],s=this._matchCallbacks(t,e);this.lookup[l.id]={trigger:t.id,fn:()=>this.executor(s,t,this.ctx.config.trackExecutedCallbacks)}}executeOne(t,e){const l=this._matchCallbacks(t,e);return this.executor(l,t,this.ctx.config.trackExecutedCallbacks)}*execute(t){let e=this.lookup[t];for(delete this.lookup[t];e;){yield e.fn();const l=e.trigger;e=this.lookup[l],delete this.lookup[l]}}}class b extends Error{constructor(t=""){super(t),this.name="Break"}}class O{constructor(t){this.depthFirst=t,this.queue=[],this.add=t?e=>this.queue.unshift(...e):e=>this.queue.push(...e)}shift(){return this.queue.shift()}get more(){return this.queue.length>0}}class _{constructor(t){this.ctx=t,this.depthFirst=t.config.traversalMode==="depth"}shouldSkipVisitation(t){if(!t.canBeCompared())return!1;const e=this.ctx.config.visitationRegister;if(!e.objectHasBeenSeen(t))e.registerObjectVisit(t);else{if(this.ctx.config.graphMode==="graph")return!0;if(this.ctx.config.graphMode==="finiteTree")throw"The object violates the defined structure. Override 'graphMode' in the config to allow parsing different object structures."}return!1}*walk(t){const e=new O(this.depthFirst),l=d.forSync(this.ctx);try{e.add([k.fromRoot(t)]);do{const s=e.shift();if(this.shouldSkipVisitation(s))continue;const a=s.children;if(e.add(a),l.executeOne(s,"preVisit"),yield s,this.depthFirst&&a.length)l.pushToStack(s,"postVisit");else{l.executeOne(s,"postVisit");for(let o of l.execute(s.id));}}while(e.more)}catch(s){if(!(s instanceof b))throw s}}async*walkAsync(t){const e=new O(this.depthFirst),l=d.forAsync(this.ctx);try{e.add([k.fromRoot(t)]);do{const s=e.shift();if(this.shouldSkipVisitation(s))continue;const a=s.children;if(e.add(a),await l.executeOne(s,"preVisit"),yield s,this.depthFirst&&a.length)l.pushToStack(s,"postVisit");else{await l.executeOne(s,"postVisit");for await(const o of l.execute(s.id));}}while(e.more)}catch(s){if(!(s instanceof b))throw s}}}function*p(i,t={}){const e=v(t);yield*new _(e).walk(i)}async function*m(i,t={}){const e=v(t);yield*new _(e).walkAsync(i)}function y(i,t={}){for(let e of p(i,t));}async function x(i,t={}){for await(let e of m(i,t));}class E{constructor(t,e){this.cbs=t,this.source=e,this.callback={callback:()=>{}}}withExecutionOrder(t){return this.callback.executionOrder=t,this}withFilter(t){return this.withFilters(t)}withFilters(...t){return this.callback.filters=t,this}withTiming(t){return this.callback.timing=t,this}done(){return this.source.withCallbacks(...this.cbs.map(t=>({...this.callback,callback:t})))}}class j{constructor(){this._config={},this.globalFilters=[]}resetConfig(){return this._config={},this}withConfig(t){return this._config={...this._config,...t},this}withTraversalMode(t){return this._config.traversalMode=t,this}withGraphMode(t){return this._config.graphMode=t,this}withConfiguredCallbacks(...t){return new E(t,this)}withConfiguredCallback(t){return this.withConfiguredCallbacks(t)}withCallback(t){return this.withCallbacks(t)}withGlobalFilter(t){return this.globalFilters.push(t),this}withCallbacks(...t){return this._config.onVisit||(this._config.onVisit=[]),C(this._config.onVisit)||(this._config.onVisit=[this._config.onVisit]),this._config.onVisit.push(...t),this}getCurrentConfig(){return{...this._config,onVisit:f(this._config.onVisit??[]).map(t=>({...t,filters:[...t.filters?f(t.filters):[],...this.globalFilters]}))}}}class $ extends j{walk(t){y(t,this.getCurrentConfig())}*walkStep(t){return p(t,this.getCurrentConfig())}withSimpleCallback(t){return this.withSimpleCallbacks(t)}withSimpleCallbacks(...t){return this.withCallbacks(...t.map(e=>({callback:e})))}}class D extends j{async walk(t){return x(t,this.getCurrentConfig())}async*walkStep(t){return m(t,this.getCurrentConfig())}withParallelizeAsyncCallbacks(t){return this._config.parallelizeAsyncCallbacks=t,this}withSimpleCallback(t){return this.withSimpleCallbacks(t)}withSimpleCallbacks(...t){return this.withCallbacks(...t.map(e=>({callback:e})))}}function w(i,...t){y(i,{onVisit:t.map(e=>({callback:e}))})}async function W(i,...t){await x(i,{onVisit:t.map(e=>({callback:e}))})}function G(i,t,e,l){const s=t.split(e).slice(1);for(;s.length>1;)i=i[s.shift()];i[s.shift()]=l}function H(i,t="$walk:dc$"){if(i===null)return null;const e=Array.isArray(i)?[]:{},l=({key:s})=>t+s;return y(i,{onVisit:[{timing:"preVisit",filters:[s=>!s.isRoot],callback:s=>G(e,s.getPath(l),t,s.nodeType==="array"?[]:s.nodeType==="value"?s.val:s.val===null?null:{})}]}),e}const I=({key:i,isArrayMember:t})=>t?`[${i}]`:`.${i}`;function K(i,t,e=!1,l=I,s=(a,o)=>Object.is(a.val,o.val)){const a={},o={};return w(i,n=>a[n.getPath(l)]=n),w(t,n=>o[n.getPath(l)]=n),[...new Set([...Object.keys(a),...Object.keys(o)])].filter(n=>!e||(a[n]||o[n]).nodeType==="value").map(n=>{const r=a[n],c=o[n],V=r&&!c,A=c&&!r,S=r&&c&&!s(r,c);let u={path:n,hasDifference:V||A||S};return A?(u.difference="added",u.b=c==null?void 0:c.val):V?(u.difference="removed",u.a=r==null?void 0:r.val):S&&(u.difference={before:r==null?void 0:r.val,after:c==null?void 0:c.val},u.a=r==null?void 0:r.val,u.b=c==null?void 0:c.val),u})}function Q(i,t,e){let l=t;for(const s of p(i))l=e(l,s);return l}exports.AsyncWalkBuilder=D;exports.Break=b;exports.SetVisitationRegister=B;exports.WalkBuilder=$;exports.WalkNode=k;exports._CallbackStacker=d;exports._buildContext=v;exports.apply=w;exports.applyAsync=W;exports.asMany=f;exports.compare=K;exports.deepCopy=H;exports.isMany=C;exports.reduce=Q;exports.walk=y;exports.walkAsync=x;exports.walkAsyncStep=m;exports.walkStep=p;
